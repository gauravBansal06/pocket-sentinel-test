{
  "swagger": "2.0",
  "info": {},
  "paths": {
    "/activate/host": {
      "post": {
        "description": "Activate a Host",
        "tags": [
          "host-tag"
        ],
        "operationId": "idOfActivateHost",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ActivateHostRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/fetchActivateResponse"
          },
          "500": {
            "$ref": "#/responses/DefaultResponse"
          }
        }
      }
    },
    "/activate/li/{id}": {
      "post": {
        "tags": [
          "li-tag"
        ],
        "summary": "Activate an LI.",
        "operationId": "idOfActivateLIEndpoint",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ActivateLIRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/activateLiResponse"
          },
          "500": {
            "$ref": "#/responses/DefaultResponse"
          }
        }
      }
    },
    "/allocate/li": {
      "post": {
        "tags": [
          "li-tag"
        ],
        "summary": "Allocate an LI.",
        "operationId": "idOfAllocateLIEndpoint",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AllocateLIRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/allocateLiResponse"
          },
          "500": {
            "$ref": "#/responses/DefaultResponse"
          }
        }
      }
    },
    "/allocations/li": {
      "get": {
        "tags": [
          "li-tag"
        ],
        "summary": "Fetch details of an LI based on its ID.",
        "operationId": "idOfGetAllocationsEndpoint",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/FetchAllocationsResponse"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/getliAllocations"
          },
          "500": {
            "$ref": "#/responses/DefaultResponse"
          }
        }
      }
    },
    "/count/li": {
      "post": {
        "tags": [
          "li-tag"
        ],
        "summary": "Count LIs.",
        "operationId": "idOfCountLIEndpoint",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CountLIRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/countLiResponse"
          },
          "500": {
            "$ref": "#/responses/DefaultResponse"
          }
        }
      }
    },
    "/deactivate/li/": {
      "post": {
        "tags": [
          "li-tag"
        ],
        "summary": "Deactivate an LI.",
        "operationId": "idOfDeactivateLIEndpoint",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/DeActivateLIRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/deactivateLiResponse"
          },
          "500": {
            "$ref": "#/responses/DefaultResponse"
          }
        }
      }
    },
    "/deallocate/li": {
      "patch": {
        "tags": [
          "li-tag"
        ],
        "summary": "De-Allocate an LI.",
        "operationId": "idOfDeAllocateLIEndpoint",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/DeallocateLIRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/deallocateLiResponse"
          },
          "500": {
            "$ref": "#/responses/DefaultResponse"
          }
        }
      }
    },
    "/host": {
      "put": {
        "description": "Update a new Host",
        "tags": [
          "host-tag"
        ],
        "operationId": "idOfUpdateHost",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UpdateHostRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/fetchResponse"
          },
          "500": {
            "$ref": "#/responses/DefaultResponse"
          }
        }
      },
      "delete": {
        "description": "Delete a Host",
        "tags": [
          "host-tag"
        ],
        "operationId": "idOfDeleteHost",
        "parameters": [
          {
            "description": "Details of the Host.",
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/DeleteHostRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/deleteHostResponse"
          },
          "500": {
            "$ref": "#/responses/DefaultResponse"
          }
        }
      }
    },
    "/host/{id}": {
      "get": {
        "description": "Fetch a Host",
        "tags": [
          "host-tag"
        ],
        "operationId": "idOfFetchHost",
        "responses": {
          "200": {
            "$ref": "#/responses/fetchHostResponse"
          },
          "500": {
            "$ref": "#/responses/DefaultResponse"
          }
        }
      }
    },
    "/hot-queries/li": {
      "get": {
        "tags": [
          "li-tag"
        ],
        "summary": "Fetch HotQueriesLI.",
        "operationId": "idOFetchHotQueriesLIEndpoint",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/FetchHotQueriesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/fetchHotQuery"
          },
          "500": {
            "$ref": "#/responses/DefaultResponse"
          }
        }
      },
      "post": {
        "tags": [
          "li-tag"
        ],
        "summary": "Add HotQueriesLI.",
        "operationId": "idOAddHotQueriesLIEndpoint",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AddHotQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/AddHotQuery"
          },
          "500": {
            "$ref": "#/responses/DefaultResponse"
          }
        }
      }
    },
    "/hot-queries/li/{id}": {
      "post": {
        "tags": [
          "li-tag"
        ],
        "summary": "Update HotQueriesLI.",
        "operationId": "idOUpdateHotQueriesLIEndpoint",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UpdateHotQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/UpdateHotQuery"
          },
          "500": {
            "$ref": "#/responses/DefaultResponse"
          }
        }
      }
    },
    "/image-snapshot": {
      "post": {
        "description": "Add Image Snapshot Definition",
        "tags": [
          "snapshot-tag"
        ],
        "operationId": "idOfAddImageSnapshot",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AddOSSnapShotRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/AddImageSnapshot"
          }
        }
      },
      "delete": {
        "description": "Remove Image Snapshot Definition",
        "tags": [
          "snapshot-tag"
        ],
        "operationId": "idOfRemoveImageSnapshot",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RemoveOSSnapShotRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/RemoveImageSnapshot"
          }
        }
      }
    },
    "/image-snapshot/fetch": {
      "post": {
        "description": "Fetch Image Snapshot Definition",
        "tags": [
          "snapshot-tag"
        ],
        "operationId": "idOfFetchImageSnapshot",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/FetchOSSnapShotRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/FetchImageSnapshot"
          }
        }
      }
    },
    "/inventory": {
      "post": {
        "description": "Update Inventory",
        "tags": [
          "inventory-tag"
        ],
        "operationId": "idOfCreateInventory",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/InventoryWithoutID"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/CreateInventory"
          },
          "500": {
            "$ref": "#/responses/DefaultResponse"
          }
        }
      },
      "delete": {
        "description": "Remove Inventory",
        "tags": [
          "inventory-tag"
        ],
        "operationId": "idOfRemoveInventory",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/InventoryWithoutID"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/RemoveInventory"
          },
          "500": {
            "$ref": "#/responses/DefaultResponse"
          }
        }
      }
    },
    "/inventory/{id}": {
      "get": {
        "description": "Fetch Inventory",
        "tags": [
          "inventory-tag"
        ],
        "operationId": "idOfFetchInventory",
        "responses": {
          "200": {
            "$ref": "#/responses/FetchInventoryResponse"
          },
          "500": {
            "$ref": "#/responses/DefaultResponse"
          }
        }
      },
      "put": {
        "description": "Update Inventory",
        "tags": [
          "inventory-tag"
        ],
        "operationId": "idOfUpdateInventory",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UpdateInventoryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/UpdateInventory"
          },
          "500": {
            "$ref": "#/responses/DefaultResponse"
          }
        }
      }
    },
    "/li/refresh-cache": {
      "post": {
        "tags": [
          "li-tag"
        ],
        "summary": "Refresh cache LI.",
        "operationId": "idOfRefreshCacheLIEndpoint",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RefreshCacheRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/refreshcacheLiResponse"
          },
          "500": {
            "$ref": "#/responses/DefaultResponse"
          }
        }
      }
    },
    "/li/{id}": {
      "get": {
        "tags": [
          "li-tag"
        ],
        "summary": "Fetch details of an LI based on its ID.",
        "operationId": "idOfGetLIEndpoint",
        "responses": {
          "200": {
            "$ref": "#/responses/getliResponse"
          },
          "500": {
            "$ref": "#/responses/DefaultResponse"
          }
        }
      }
    },
    "/os-specs": {
      "post": {
        "description": "Add os-version",
        "tags": [
          "os-version-tag"
        ],
        "operationId": "idOfAddOSSpec",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AddOSVersionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/addOsSpecResponse"
          },
          "500": {
            "$ref": "#/responses/DefaultResponse"
          }
        }
      },
      "delete": {
        "description": "Delete os-version",
        "tags": [
          "os-version-tag"
        ],
        "operationId": "idOfRemoveOSSpec",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RemoveOSRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/removeOsSpecResponse"
          },
          "500": {
            "$ref": "#/responses/DefaultResponse"
          }
        }
      }
    },
    "/os-specs/fetch": {
      "post": {
        "description": "Fetch os-version",
        "tags": [
          "os-version-tag"
        ],
        "operationId": "idOfGetOSSpec",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/GetOSVersionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/fetchOsSpecResponse"
          },
          "500": {
            "$ref": "#/responses/DefaultResponse"
          }
        }
      }
    },
    "/pool": {
      "put": {
        "description": "Update Pool Definition",
        "tags": [
          "pool-tag"
        ],
        "operationId": "idOfUpdatePool",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UpdatePoolRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/UpdatePool"
          },
          "500": {
            "$ref": "#/responses/DefaultResponse"
          }
        }
      },
      "post": {
        "description": "Add Pool Definition",
        "tags": [
          "pool-tag"
        ],
        "operationId": "idOfAddPool",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AddPoolRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/AddPool"
          },
          "500": {
            "$ref": "#/responses/DefaultResponse"
          }
        }
      },
      "delete": {
        "description": "Delete Pool Definition",
        "tags": [
          "pool-tag"
        ],
        "operationId": "idOfDeletePool",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RemovePoolRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/DeletePool"
          },
          "500": {
            "$ref": "#/responses/DefaultResponse"
          }
        }
      }
    },
    "/pool/fetch": {
      "post": {
        "description": "Fetch Pool Definition",
        "tags": [
          "pool-tag"
        ],
        "operationId": "idOfFetchPool",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/FetchPoolRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/FetchPool"
          },
          "500": {
            "$ref": "#/responses/DefaultResponse"
          }
        }
      }
    },
    "/provider-capacity": {
      "post": {
        "description": "Add Provider",
        "tags": [
          "provider-capacity-tag"
        ],
        "operationId": "idOfAddProvider",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ProviderCapacity"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/AddProvider"
          },
          "500": {
            "$ref": "#/responses/DefaultResponse"
          }
        }
      }
    },
    "/provider-capacity/{id}": {
      "get": {
        "description": "Fetch Provider",
        "tags": [
          "provider-capacity-tag"
        ],
        "operationId": "idOfFetchProvider",
        "responses": {
          "200": {
            "$ref": "#/responses/FetchProvider"
          },
          "500": {
            "$ref": "#/responses/DefaultResponse"
          }
        }
      },
      "put": {
        "description": "Update Provider",
        "tags": [
          "provider-capacity-tag"
        ],
        "operationId": "idOfUpdateProvider",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UpdateProviderCapacityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/UpdateProvider"
          },
          "500": {
            "$ref": "#/responses/DefaultResponse"
          }
        }
      },
      "delete": {
        "description": "Delete Provider",
        "tags": [
          "provider-capacity-tag"
        ],
        "operationId": "idOfDeleteProvider",
        "responses": {
          "200": {
            "$ref": "#/responses/DeleteProvider"
          },
          "500": {
            "$ref": "#/responses/DefaultResponse"
          }
        }
      }
    },
    "/register-org": {
      "post": {
        "description": "Register a new Org and provide public keys",
        "tags": [
          "auth-tag"
        ],
        "operationId": "idOfAddOrg",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RegisterOrg"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/registerResponse"
          },
          "500": {
            "$ref": "#/responses/DefaultResponse"
          }
        }
      }
    },
    "/register/logical-inventory": {
      "post": {
        "tags": [
          "li-tag"
        ],
        "summary": "Register an LI.",
        "operationId": "idOfRegisterLIEndpoint",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RegisterLIRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/registerLiResponse"
          },
          "500": {
            "$ref": "#/responses/DefaultResponse"
          }
        }
      }
    },
    "/register/physical-inventory": {
      "post": {
        "description": "Add a new Host",
        "tags": [
          "host-tag"
        ],
        "operationId": "idOfRegisterHost",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RegisterPhysicalInventoryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/fetchRegisterResponse"
          },
          "500": {
            "$ref": "#/responses/DefaultResponse"
          }
        }
      }
    }
  },
  "definitions": {
    "ActivateHostRequest": {
      "type": "object",
      "properties": {
        "ClientIP": {
          "type": "string"
        },
        "ID": {
          "type": "string"
        },
        "available_templates": {
          "type": "string",
          "x-go-name": "AvailableTemplates"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "ActivateHostResponse": {
      "type": "object",
      "properties": {
        "Data": {
          "$ref": "#/definitions/Host"
        },
        "Error": {
          "type": "string"
        },
        "ID": {
          "type": "string"
        },
        "Message": {
          "type": "string"
        },
        "Status": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "ActivateLIRequest": {
      "type": "object",
      "properties": {
        "ClientIP": {
          "type": "string"
        },
        "ID": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "ActivateLIResponse": {
      "type": "object",
      "properties": {
        "Data": {
          "$ref": "#/definitions/LI"
        },
        "Error": {
          "type": "string"
        },
        "ID": {
          "type": "string"
        },
        "Message": {
          "type": "string"
        },
        "Status": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "AddHotQuery": {
      "type": "object",
      "properties": {
        "host_ip": {
          "type": "string",
          "x-go-name": "HostIP"
        },
        "ip": {
          "type": "string",
          "x-go-name": "IP"
        },
        "max_count": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "MaxCount"
        },
        "min_count": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "MinCount"
        },
        "min_cpu": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "MinCPU"
        },
        "min_ram": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "MinRam"
        },
        "min_storage": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "MinStorage"
        },
        "org_id": {
          "type": "string",
          "x-go-name": "OrgId"
        },
        "os_name": {
          "type": "string",
          "x-go-name": "OsName"
        },
        "os_version": {
          "type": "string",
          "x-go-name": "OSVersion"
        },
        "provider": {
          "type": "string",
          "x-go-name": "Provider"
        },
        "region": {
          "type": "string",
          "x-go-name": "Region"
        },
        "resolution": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Resolution"
        },
        "streaming": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Streaming"
        },
        "strict_region": {
          "type": "string",
          "x-go-name": "StrictRegion"
        },
        "type": {
          "type": "string",
          "x-go-name": "Type"
        },
        "virtualized": {
          "type": "string",
          "x-go-name": "Virtualized"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "AddOSSnapShotRequest": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "agent_version": {
          "type": "string",
          "x-go-name": "AgentVersion"
        },
        "description": {
          "type": "string",
          "x-go-name": "Description"
        },
        "directory_md5": {
          "type": "string",
          "x-go-name": "DirectoryMD5"
        },
        "executables_md5": {
          "type": "string",
          "x-go-name": "ExecutablesMD5"
        },
        "image": {
          "type": "string",
          "x-go-name": "OSImage"
        },
        "os_type": {
          "type": "string",
          "x-go-name": "OSName"
        },
        "os_version": {
          "type": "string",
          "x-go-name": "OSVersion"
        },
        "settings_md5": {
          "type": "string",
          "x-go-name": "SettingsMD5"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "AddOSVersionRequest": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "latest_image": {
          "type": "string",
          "x-go-name": "LatestImage"
        },
        "min_cpu": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "MinCPU"
        },
        "min_ram": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "MinRam"
        },
        "min_storage": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "MinStorage"
        },
        "org_id": {
          "type": "string",
          "x-go-name": "OrgId"
        },
        "organization_id": {
          "type": "string",
          "x-go-name": "OrganizationId"
        },
        "os_type": {
          "type": "string",
          "x-go-name": "OSType"
        },
        "os_version": {
          "type": "string",
          "x-go-name": "OSVersion"
        },
        "ttl": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "TTL"
        },
        "virtualized": {
          "type": "boolean",
          "x-go-name": "Virtualized"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "AddPoolRequest": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "max_size": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "MaxSize"
        },
        "min_size": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "MinSize"
        },
        "organization_id": {
          "type": "string",
          "x-go-name": "OrganizationId"
        },
        "os_name": {
          "type": "string",
          "x-go-name": "OSName"
        },
        "os_version": {
          "type": "string",
          "x-go-name": "OSVersion"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "AllocateLIRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "type": "boolean"
        },
        "ID": {
          "type": "string"
        },
        "host_ip": {
          "type": "string",
          "x-go-name": "HostIP"
        },
        "ip": {
          "type": "string",
          "x-go-name": "IP"
        },
        "min_cpu": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "MinCPU"
        },
        "min_ram": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "MinRam"
        },
        "min_storage": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "MinStorage"
        },
        "org_id": {
          "type": "string",
          "x-go-name": "OrgId"
        },
        "os_name": {
          "type": "string",
          "x-go-name": "OsName"
        },
        "os_version": {
          "type": "string",
          "x-go-name": "OSVersion"
        },
        "product": {
          "type": "string",
          "x-go-name": "Product"
        },
        "provider": {
          "type": "string",
          "x-go-name": "Provider"
        },
        "region": {
          "type": "string",
          "x-go-name": "Region"
        },
        "resolution": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Resolution"
        },
        "streaming": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Streaming"
        },
        "strict_region": {
          "type": "string",
          "x-go-name": "StrictRegion"
        },
        "test_id": {
          "type": "string",
          "x-go-name": "TestId"
        },
        "type": {
          "type": "string",
          "x-go-name": "Type"
        },
        "virtualized": {
          "type": "string",
          "x-go-name": "Virtualized"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "AllocateLIResponse": {
      "type": "object",
      "properties": {
        "HostIP": {
          "type": "string"
        },
        "IP": {
          "type": "string"
        },
        "LiId": {
          "type": "string"
        },
        "Port": {
          "type": "integer",
          "format": "int64"
        },
        "Provider": {
          "type": "string"
        },
        "Region": {
          "type": "string"
        },
        "User": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "CountLIRequest": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "host_ip": {
          "type": "string",
          "x-go-name": "HostIP"
        },
        "ip": {
          "type": "string",
          "x-go-name": "IP"
        },
        "min_cpu": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "MinCPU"
        },
        "min_ram": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "MinRam"
        },
        "min_storage": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "MinStorage"
        },
        "org_id": {
          "type": "string",
          "x-go-name": "OrgID"
        },
        "os_names": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "OSNames"
        },
        "os_version": {
          "type": "string",
          "x-go-name": "OSVersion"
        },
        "product": {
          "type": "string",
          "x-go-name": "Product"
        },
        "provider": {
          "type": "string",
          "x-go-name": "Provider"
        },
        "region": {
          "type": "string",
          "x-go-name": "Region"
        },
        "resolution": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Resolution"
        },
        "streaming": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Streaming"
        },
        "strict_region": {
          "type": "string",
          "x-go-name": "StrictRegion"
        },
        "type": {
          "type": "string",
          "x-go-name": "Type"
        },
        "virtualized": {
          "type": "string",
          "x-go-name": "Virtualized"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "CountLIResponse": {
      "type": "object",
      "properties": {
        "Count": {
          "type": "integer",
          "format": "int64"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LI"
          }
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "DeActivateLIRequest": {
      "type": "object",
      "properties": {
        "ClientIP": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "DeActivateLIResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/LI"
        },
        "message": {
          "type": "string",
          "x-go-name": "Message"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "DeallocateLIRequest": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "li_id": {
          "type": "string",
          "x-go-name": "LiId"
        },
        "test_id": {
          "type": "string",
          "x-go-name": "TestId"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "DeallocateLIResponse": {
      "type": "object",
      "properties": {
        "Status": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "DefaultResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "x-go-name": "Message"
        },
        "status": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Status"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "DeleteHostRequest": {
      "type": "object",
      "properties": {
        "ClientIP": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "FetchAllocationsRequest": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Limit"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Offset"
        },
        "os_type": {
          "type": "string",
          "x-go-name": "OsType"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "FetchAllocationsResponse": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Offset"
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LIAllocation"
          },
          "x-go-name": "Result"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "FetchHotQueriesRequest": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Limit"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Offset"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "FetchHotQueriesResponse": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Offset"
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HotQueries"
          },
          "x-go-name": "Result"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "FetchOSSnapShotRequest": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "agent_version": {
          "type": "string",
          "x-go-name": "AgentVersion"
        },
        "created_at": {
          "type": "string",
          "x-go-name": "CreatedAt"
        },
        "created_by": {
          "type": "string",
          "x-go-name": "CreatedBy"
        },
        "created_op": {
          "type": "string",
          "x-go-name": "CreatedOp"
        },
        "os_image": {
          "type": "string",
          "x-go-name": "OSImage"
        },
        "os_name": {
          "type": "string",
          "x-go-name": "OSName"
        },
        "os_version": {
          "type": "string",
          "x-go-name": "OSVersion"
        },
        "update_op": {
          "type": "string",
          "x-go-name": "UpdateOp"
        },
        "updated_at": {
          "type": "string",
          "x-go-name": "UpdatedAt"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "FetchPoolRequest": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "max_size": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "MaxSize"
        },
        "min_size": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "MinSize"
        },
        "organization_id": {
          "type": "string",
          "x-go-name": "OrganizationId"
        },
        "os_name": {
          "type": "string",
          "x-go-name": "OSName"
        },
        "os_version": {
          "type": "string",
          "x-go-name": "OSVersion"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "FetchPoolResponse": {
      "type": "object",
      "properties": {
        "Count": {
          "type": "integer",
          "format": "int64"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Pool"
          }
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "GetImageSnapshotResponse": {
      "type": "object",
      "properties": {
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OSSnapShot"
          }
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "GetOSSpecResponse": {
      "type": "object",
      "properties": {
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OSSpec"
          }
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "GetOSVersionRequest": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-go-name": "OSID"
        },
        "min_ram": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "MinRam"
        },
        "min_storage": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "MinStorage"
        },
        "org_id": {
          "type": "string",
          "x-go-name": "OrgId"
        },
        "os_type": {
          "type": "string",
          "x-go-name": "OSType"
        },
        "os_version": {
          "type": "string",
          "x-go-name": "OSVersion"
        },
        "virtualized": {
          "type": "string",
          "x-go-name": "Virtualized"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "Host": {
      "type": "object",
      "properties": {
        "Capacity": {
          "type": "integer",
          "format": "int64"
        },
        "ClockSpeed": {
          "type": "integer",
          "format": "int64"
        },
        "Hash": {
          "type": "string"
        },
        "available_capacity": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "AvailableCapacity"
        },
        "available_storage": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "AvailableStorage"
        },
        "available_templates": {
          "type": "string",
          "x-go-name": "AvailableTemplates"
        },
        "cores_limit": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "CPULimit"
        },
        "cpu": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Cores"
        },
        "created_by": {
          "type": "string",
          "x-go-name": "CreatedBy"
        },
        "created_time": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "Created"
        },
        "fqdn": {
          "type": "string",
          "x-go-name": "Fqdn"
        },
        "health_status": {
          "type": "string",
          "x-go-name": "HealthStatus"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "org_id": {
          "type": "string",
          "x-go-name": "OrganizationID"
        },
        "os_name": {
          "type": "string",
          "x-go-name": "OSName"
        },
        "private_ip": {
          "type": "string",
          "x-go-name": "PrivateIP"
        },
        "provider": {
          "type": "string",
          "x-go-name": "Provider"
        },
        "public_ip": {
          "type": "string",
          "x-go-name": "PublicIP"
        },
        "ram": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "RAM"
        },
        "ram_limit": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "RAMLimit"
        },
        "region": {
          "type": "string",
          "x-go-name": "Region"
        },
        "status": {
          "type": "string",
          "x-go-name": "Status"
        },
        "storage": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Storage"
        },
        "storage_limit": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "StorageLimit"
        },
        "updated_time": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "Updated"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/models"
    },
    "HotQueries": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "Created"
        },
        "created_by": {
          "type": "string",
          "x-go-name": "CreatedBy"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "ID"
        },
        "max_count": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "MaxCount"
        },
        "min_count": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "MinCount"
        },
        "query": {
          "type": "string",
          "x-go-name": "Query"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "Updated"
        },
        "updated_by": {
          "type": "string",
          "x-go-name": "UpdatedBy"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/models"
    },
    "Inventory": {
      "type": "object",
      "properties": {
        "altered": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Altered"
        },
        "cpu": {
          "type": "string",
          "x-go-name": "CPU"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "Created"
        },
        "currency": {
          "type": "string",
          "x-go-name": "Currency"
        },
        "datacenter": {
          "type": "string",
          "x-go-name": "Datacenter"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "ID"
        },
        "invoice": {
          "type": "number",
          "format": "double",
          "x-go-name": "Invoice"
        },
        "ip": {
          "type": "string",
          "x-go-name": "IP"
        },
        "os": {
          "type": "string",
          "x-go-name": "OS"
        },
        "ram": {
          "type": "string",
          "x-go-name": "RAM"
        },
        "region": {
          "type": "string",
          "x-go-name": "Region"
        },
        "role": {
          "type": "string",
          "x-go-name": "Role"
        },
        "status": {
          "type": "string",
          "x-go-name": "Status"
        },
        "storage": {
          "type": "string",
          "x-go-name": "Storage"
        },
        "type": {
          "type": "string",
          "x-go-name": "Type"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "Updated"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/models"
    },
    "InventoryResponse": {
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/Inventory"
        },
        "message": {
          "type": "string",
          "x-go-name": "Message"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "InventoryWithoutID": {
      "type": "object",
      "properties": {
        "altered": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Altered"
        },
        "cpu": {
          "type": "string",
          "x-go-name": "CPU"
        },
        "currency": {
          "type": "string",
          "x-go-name": "Currency"
        },
        "datacenter": {
          "type": "string",
          "x-go-name": "Datacenter"
        },
        "invoice": {
          "type": "number",
          "format": "double",
          "x-go-name": "Invoice"
        },
        "ip": {
          "type": "string",
          "x-go-name": "IP"
        },
        "os": {
          "type": "string",
          "x-go-name": "OS"
        },
        "ram": {
          "type": "string",
          "x-go-name": "RAM"
        },
        "region": {
          "type": "string",
          "x-go-name": "Region"
        },
        "role": {
          "type": "string",
          "x-go-name": "Role"
        },
        "status": {
          "type": "string",
          "x-go-name": "Status"
        },
        "storage": {
          "type": "string",
          "x-go-name": "Storage"
        },
        "type": {
          "type": "string",
          "x-go-name": "Type"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/models"
    },
    "LI": {
      "type": "object",
      "properties": {
        "AP_SOUTH": {
          "type": "integer",
          "format": "int64"
        },
        "AP_SOUTHEAST": {
          "type": "integer",
          "format": "int64"
        },
        "AU_CENTRAL": {
          "type": "integer",
          "format": "int64"
        },
        "AU_SOUTH": {
          "type": "integer",
          "format": "int64"
        },
        "EU_CENTRAL": {
          "type": "integer",
          "format": "int64"
        },
        "EU_WEST": {
          "type": "integer",
          "format": "int64"
        },
        "Hot": {
          "type": "boolean"
        },
        "RAM": {
          "type": "integer",
          "format": "int64"
        },
        "US_CENTRAL": {
          "type": "integer",
          "format": "int64"
        },
        "US_EAST": {
          "type": "integer",
          "format": "int64"
        },
        "US_WEST": {
          "type": "integer",
          "format": "int64"
        },
        "clock_speed": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "ClockSpeed"
        },
        "cores": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Cores"
        },
        "cpu_limit": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "CPULimit"
        },
        "created_time": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "Created"
        },
        "hash": {
          "type": "string",
          "x-go-name": "Hash"
        },
        "health_status": {
          "type": "string",
          "x-go-name": "HealthStatus"
        },
        "host_ip": {
          "type": "string",
          "x-go-name": "HostIP"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "image": {
          "type": "string",
          "x-go-name": "Image"
        },
        "ip": {
          "type": "string",
          "x-go-name": "IP"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "organization_id": {
          "type": "string",
          "x-go-name": "OrganizationID"
        },
        "os_snapshot": {
          "type": "string",
          "x-go-name": "OsSnapshot"
        },
        "os_type": {
          "type": "string",
          "x-go-name": "OsType"
        },
        "os_version": {
          "type": "string",
          "x-go-name": "OsVersion"
        },
        "port": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Port"
        },
        "product": {
          "type": "string",
          "x-go-name": "Product"
        },
        "provider": {
          "type": "string",
          "x-go-name": "Provider"
        },
        "ram_limit": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "RAMLimit"
        },
        "region": {
          "type": "string",
          "x-go-name": "Region"
        },
        "registered_by": {
          "type": "string",
          "x-go-name": "RegisteredBy"
        },
        "status": {
          "type": "string",
          "x-go-name": "Status"
        },
        "storage": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Storage"
        },
        "storage_limit": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "StorageLimit"
        },
        "type": {
          "type": "string",
          "x-go-name": "Type"
        },
        "updated_time": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "Updated"
        },
        "user": {
          "type": "string",
          "x-go-name": "User"
        },
        "virtualized": {
          "type": "boolean",
          "x-go-name": "Virtualized"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/models"
    },
    "LIAllocation": {
      "type": "object",
      "properties": {
        "created_by": {
          "type": "string",
          "x-go-name": "CreatedBy"
        },
        "created_time": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "Created"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "li_id": {
          "type": "string",
          "x-go-name": "LiId"
        },
        "os_type": {
          "type": "string",
          "x-go-name": "OsType"
        },
        "remark": {
          "type": "string",
          "x-go-name": "Remark"
        },
        "test_id": {
          "type": "string",
          "x-go-name": "TestId"
        },
        "test_status": {
          "type": "string",
          "x-go-name": "TestStatus"
        },
        "updated_time": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "Updated"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/models"
    },
    "OSSnapShot": {
      "type": "object",
      "properties": {
        "AgentVersion": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "DirectoryMD5": {
          "type": "string"
        },
        "ExecutablesM5": {
          "type": "string"
        },
        "OrganizationID": {
          "type": "string"
        },
        "OsImage": {
          "type": "string"
        },
        "SettingMD5": {
          "type": "string"
        },
        "UpdatedAt": {
          "type": "string"
        },
        "created_time": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "Created"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "osVersion": {
          "type": "string",
          "x-go-name": "OsVersion"
        },
        "os_type": {
          "type": "string",
          "x-go-name": "OsType"
        },
        "updated_time": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "Updated"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/models"
    },
    "OSSpec": {
      "type": "object",
      "properties": {
        "CreatedAt": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "LatestImage": {
          "type": "string"
        },
        "MinCPU": {
          "type": "integer",
          "format": "int64"
        },
        "MinRAM": {
          "type": "integer",
          "format": "int64"
        },
        "MinStorage": {
          "type": "integer",
          "format": "int64"
        },
        "OrganizationID": {
          "type": "string"
        },
        "Ttl": {
          "type": "integer",
          "format": "int64"
        },
        "UpdatedAt": {
          "type": "string"
        },
        "Virtualized": {
          "type": "boolean"
        },
        "created_time": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "Created"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "os_snapshot": {
          "type": "string",
          "x-go-name": "OsId"
        },
        "os_type": {
          "type": "string",
          "x-go-name": "OsType"
        },
        "os_version": {
          "type": "string",
          "x-go-name": "OsVersion"
        },
        "updated_time": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "Updated"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/models"
    },
    "Pool": {
      "type": "object",
      "properties": {
        "CreatedBy": {
          "type": "string"
        },
        "MaxSize": {
          "type": "integer",
          "format": "int64"
        },
        "MinSize": {
          "type": "integer",
          "format": "int64"
        },
        "OrganizationID": {
          "type": "string"
        },
        "created_time": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "Created"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "osName": {
          "type": "string",
          "x-go-name": "OsName"
        },
        "osVersion": {
          "type": "string",
          "x-go-name": "OsVersion"
        },
        "updated_time": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "Updated"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/models"
    },
    "ProviderCapacity": {
      "type": "object",
      "properties": {
        "capacity": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Capacity"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "Created"
        },
        "created_by": {
          "type": "string",
          "x-go-name": "CreatedBy"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "region": {
          "type": "string",
          "x-go-name": "Region"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "Updated"
        },
        "updated_by": {
          "type": "string",
          "x-go-name": "UpdatedBy"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/models"
    },
    "ProviderCapacityResponse": {
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/ProviderCapacity"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "RefreshCacheRequest": {
      "type": "object",
      "properties": {
        "call_back_url": {
          "type": "string",
          "x-go-name": "CallBackURL"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "RefreshCacheResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "x-go-name": "Message"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "RegisterLIRequest": {
      "type": "object",
      "properties": {
        "AP_SOUTH": {
          "type": "integer",
          "format": "int64"
        },
        "AP_SOUTHEAST": {
          "type": "integer",
          "format": "int64"
        },
        "AU_CENTRAL": {
          "type": "integer",
          "format": "int64"
        },
        "AU_SOUTH": {
          "type": "integer",
          "format": "int64"
        },
        "EU_CENTRAL": {
          "type": "integer",
          "format": "int64"
        },
        "EU_WEST": {
          "type": "integer",
          "format": "int64"
        },
        "Hot": {
          "type": "boolean"
        },
        "RAM": {
          "type": "integer",
          "format": "int64"
        },
        "US_CENTRAL": {
          "type": "integer",
          "format": "int64"
        },
        "US_EAST": {
          "type": "integer",
          "format": "int64"
        },
        "US_WEST": {
          "type": "integer",
          "format": "int64"
        },
        "clock_speed": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "ClockSpeed"
        },
        "cores": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Cores"
        },
        "cpu_limit": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "CPULimit"
        },
        "created_time": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "Created"
        },
        "hash": {
          "type": "string",
          "x-go-name": "Hash"
        },
        "health_status": {
          "type": "string",
          "x-go-name": "HealthStatus"
        },
        "host_ip": {
          "type": "string",
          "x-go-name": "HostIP"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "image": {
          "type": "string",
          "x-go-name": "Image"
        },
        "ip": {
          "type": "string",
          "x-go-name": "IP"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "organization_id": {
          "type": "string",
          "x-go-name": "OrganizationID"
        },
        "os_name": {
          "type": "string",
          "x-go-name": "OsNames"
        },
        "os_snapshot": {
          "type": "string",
          "x-go-name": "OsSnapshot"
        },
        "os_type": {
          "type": "string",
          "x-go-name": "OsType"
        },
        "os_version": {
          "type": "string",
          "x-go-name": "OsVersion"
        },
        "port": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Port"
        },
        "product": {
          "type": "string",
          "x-go-name": "Product"
        },
        "provider": {
          "type": "string",
          "x-go-name": "Provider"
        },
        "ram_limit": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "RAMLimit"
        },
        "region": {
          "type": "string",
          "x-go-name": "Region"
        },
        "registered_by": {
          "type": "string",
          "x-go-name": "RegisteredBy"
        },
        "resolution": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Resolution"
        },
        "status": {
          "type": "string",
          "x-go-name": "Status"
        },
        "storage": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Storage"
        },
        "storage_limit": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "StorageLimit"
        },
        "streaming": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Streaming"
        },
        "type": {
          "type": "string",
          "x-go-name": "Type"
        },
        "updated_time": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "Updated"
        },
        "user": {
          "type": "string",
          "x-go-name": "User"
        },
        "virtualized": {
          "type": "boolean",
          "x-go-name": "Virtualized"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "RegisterOrg": {
      "type": "object",
      "properties": {
        "orgName": {
          "type": "string",
          "x-go-name": "OrgName"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "RegisterOrgResponse": {
      "type": "object",
      "properties": {
        "public_key": {
          "type": "string",
          "x-go-name": "PublicKeyString"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "RegisterPhysicalInventoryRequest": {
      "type": "object",
      "properties": {
        "Capacity": {
          "type": "integer",
          "format": "int64"
        },
        "ClockSpeed": {
          "type": "integer",
          "format": "int64"
        },
        "Hash": {
          "type": "string"
        },
        "available_capacity": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "AvailableCapacity"
        },
        "available_storage": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "AvailableStorage"
        },
        "available_templates": {
          "type": "string",
          "x-go-name": "AvailableTemplates"
        },
        "cores_limit": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "CPULimit"
        },
        "cpu": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Cores"
        },
        "created_by": {
          "type": "string",
          "x-go-name": "CreatedBy"
        },
        "created_time": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "Created"
        },
        "fqdn": {
          "type": "string",
          "x-go-name": "Fqdn"
        },
        "health_status": {
          "type": "string",
          "x-go-name": "HealthStatus"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "org_id": {
          "type": "string",
          "x-go-name": "OrganizationID"
        },
        "os_name": {
          "type": "string",
          "x-go-name": "OSName"
        },
        "os_names": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "OsNames"
        },
        "private_ip": {
          "type": "string",
          "x-go-name": "PrivateIP"
        },
        "provider": {
          "type": "string",
          "x-go-name": "Provider"
        },
        "public_ip": {
          "type": "string",
          "x-go-name": "PublicIP"
        },
        "ram": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "RAM"
        },
        "ram_limit": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "RAMLimit"
        },
        "region": {
          "type": "string",
          "x-go-name": "Region"
        },
        "status": {
          "type": "string",
          "x-go-name": "Status"
        },
        "storage": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Storage"
        },
        "storage_limit": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "StorageLimit"
        },
        "updated_time": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "Updated"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "RemoveOSRequest": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "os_id": {
          "type": "string",
          "x-go-name": "OSId"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "RemoveOSSnapShotRequest": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "entity_id": {
          "type": "string",
          "x-go-name": "OsSnapShotId"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "RemovePoolRequest": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "pool_id": {
          "type": "string",
          "x-go-name": "PoolId"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "UpdateHostRequest": {
      "type": "object",
      "properties": {
        "ClientIP": {
          "type": "string"
        },
        "available_capacity": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "AvailableCapacity"
        },
        "available_template": {
          "type": "string",
          "x-go-name": "AvailableTemplates"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "UpdateHotQueryRequest": {
      "type": "object",
      "properties": {
        "host_ip": {
          "type": "string",
          "x-go-name": "HostIP"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "ID"
        },
        "ip": {
          "type": "string",
          "x-go-name": "IP"
        },
        "max_count": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "MaxCount"
        },
        "min_count": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "MinCount"
        },
        "min_cpu": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "MinCPU"
        },
        "min_ram": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "MinRam"
        },
        "min_storage": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "MinStorage"
        },
        "org_id": {
          "type": "string",
          "x-go-name": "OrgId"
        },
        "os_name": {
          "type": "string",
          "x-go-name": "OsName"
        },
        "os_version": {
          "type": "string",
          "x-go-name": "OSVersion"
        },
        "provider": {
          "type": "string",
          "x-go-name": "Provider"
        },
        "region": {
          "type": "string",
          "x-go-name": "Region"
        },
        "resolution": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Resolution"
        },
        "streaming": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Streaming"
        },
        "strict_region": {
          "type": "string",
          "x-go-name": "StrictRegion"
        },
        "type": {
          "type": "string",
          "x-go-name": "Type"
        },
        "virtualized": {
          "type": "string",
          "x-go-name": "Virtualized"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "UpdateHotQueryResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "x-go-name": "Message"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "UpdateInventoryRequest": {
      "type": "object",
      "properties": {
        "altered": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Altered"
        },
        "cpu": {
          "type": "string",
          "x-go-name": "CPU"
        },
        "currency": {
          "type": "string",
          "x-go-name": "Currency"
        },
        "datacenter": {
          "type": "string",
          "x-go-name": "Datacenter"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "ID"
        },
        "invoice": {
          "type": "number",
          "format": "double",
          "x-go-name": "Invoice"
        },
        "ip": {
          "type": "string",
          "x-go-name": "IP"
        },
        "os": {
          "type": "string",
          "x-go-name": "OS"
        },
        "ram": {
          "type": "string",
          "x-go-name": "RAM"
        },
        "region": {
          "type": "string",
          "x-go-name": "Region"
        },
        "role": {
          "type": "string",
          "x-go-name": "Role"
        },
        "status": {
          "type": "string",
          "x-go-name": "Status"
        },
        "storage": {
          "type": "string",
          "x-go-name": "Storage"
        },
        "type": {
          "type": "string",
          "x-go-name": "Type"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "UpdatePoolRequest": {
      "type": "object",
      "properties": {
        "max_size": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "MAX"
        },
        "min_size": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "MIN"
        },
        "organization_id": {
          "type": "string",
          "x-go-name": "OrgID"
        },
        "os_name binding:required": {
          "type": "string",
          "x-go-name": "ID"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    },
    "UpdateProviderCapacityRequest": {
      "type": "object",
      "properties": {
        "capacity": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Capacity"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "Created"
        },
        "created_by": {
          "type": "string",
          "x-go-name": "CreatedBy"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "region": {
          "type": "string",
          "x-go-name": "Region"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "Updated"
        },
        "updated_by": {
          "type": "string",
          "x-go-name": "UpdatedBy"
        }
      },
      "x-go-package": "github.com/LambdatestIncPrivate/bookkeeping/pkg/service"
    }
  },
  "responses": {
    "AddHotQuery": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/DefaultResponse"
      }
    },
    "AddImageSnapshot": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/DefaultResponse"
      }
    },
    "AddPool": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/DefaultResponse"
      }
    },
    "AddProvider": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/ProviderCapacityResponse"
      }
    },
    "CreateInventory": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/InventoryResponse"
      }
    },
    "DefaultResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/DefaultResponse"
      }
    },
    "DeletePool": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/DefaultResponse"
      }
    },
    "DeleteProvider": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/ProviderCapacityResponse"
      }
    },
    "FetchImageSnapshot": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/GetImageSnapshotResponse"
      }
    },
    "FetchInventoryResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/InventoryResponse"
      }
    },
    "FetchPool": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/FetchPoolResponse"
      }
    },
    "FetchProvider": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/ProviderCapacityResponse"
      }
    },
    "RemoveImageSnapshot": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/DefaultResponse"
      }
    },
    "RemoveInventory": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/InventoryResponse"
      }
    },
    "UpdateHotQuery": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/UpdateHotQueryResponse"
      }
    },
    "UpdateInventory": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/InventoryResponse"
      }
    },
    "UpdatePool": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/DefaultResponse"
      }
    },
    "UpdateProvider": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/ProviderCapacityResponse"
      }
    },
    "activateLiResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/ActivateLIResponse"
      }
    },
    "addOsSpecResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/DefaultResponse"
      }
    },
    "allocateLiResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/AllocateLIResponse"
      }
    },
    "countLiResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/CountLIResponse"
      }
    },
    "deactivateLiResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/DeActivateLIResponse"
      }
    },
    "deallocateLiResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/DeallocateLIResponse"
      }
    },
    "deleteHostResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Host"
      }
    },
    "fetchActivateResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/ActivateHostResponse"
      }
    },
    "fetchHostResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Host"
      }
    },
    "fetchHotQuery": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/FetchHotQueriesResponse"
      }
    },
    "fetchOsSpecResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/GetOSSpecResponse"
      }
    },
    "fetchRegisterResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Host"
      }
    },
    "fetchResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Host"
      }
    },
    "getliAllocations": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/FetchAllocationsRequest"
      }
    },
    "getliResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/LI"
      }
    },
    "refreshcacheLiResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/RefreshCacheResponse"
      }
    },
    "registerLiResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/LI"
      }
    },
    "registerResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/RegisterOrgResponse"
      }
    },
    "removeOsSpecResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/DefaultResponse"
      }
    }
  }
}